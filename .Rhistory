backuppath <- paste(xlspath,"Backup + Old\\",backupname,sep="")
getFX("EUR/GBP",from="2015-07-01")
wb <- loadWorkbook(xlsFXexpname)
sheets <- getSheets(wb)
removeSheet(wb, sheetName = "Data2")
yourSheet <- createSheet(wb, sheetName="Data2")
addDataFrame(EURGBP, yourSheet, startRow = 6)
saveWorkbook(wb, xlsFXexpname)
#saving backup
file.copy(xlsFXexpname,backuppath, copy.date = TRUE)
getFX("EUR/GBP",from="2015-07-01")
wb <- loadWorkbook(xlsFXexpname)
sheets <- getSheets(wb)
removeSheet(wb, sheetName = "Data2")
yourSheet <- createSheet(wb, sheetName="Data2")
addDataFrame(EURGBP, yourSheet, startRow = 6)
saveWorkbook(wb, xlsFXexpname)
#saving backup
file.copy(xlsFXexpname,backuppath, copy.date = TRUE)
library(quantmod)
library(xlsx)
xlspath <- "D:\\Dropbox\\FX Exposure\\"
xlsversion <-"FXExposure_v6"
xlsFXexpname <- paste(xlspath,xlsversion,".xlsm", sep="")
backupname <- paste(xlsversion," ",format(Sys.Date()),".xlsm", sep="")
backuppath <- paste(xlspath,"Backup + Old\\",backupname,sep="")
getFX("EUR/GBP",from="2015-07-01")
wb <- loadWorkbook(xlsFXexpname)
sheets <- getSheets(wb)
removeSheet(wb, sheetName = "Data2")
yourSheet <- createSheet(wb, sheetName="Data2")
addDataFrame(EURGBP, yourSheet, startRow = 6)
saveWorkbook(wb, xlsFXexpname)
#saving backup
file.copy(xlsFXexpname,backuppath, copy.date = TRUE)
library(quantmod)
library(xlsx)
xlspath <- "D:\\Dropbox\\FX Exposure\\"
xlsversion <-"FXExposure_v6"
xlsFXexpname <- paste(xlspath,xlsversion,".xlsm", sep="")
backupname <- paste(xlsversion," ",format(Sys.Date()),".xlsm", sep="")
backuppath <- paste(xlspath,"Backup + Old\\",backupname,sep="")
getFX("EUR/GBP",from="2015-07-01")
wb <- loadWorkbook(xlsFXexpname)
sheets <- getSheets(wb)
removeSheet(wb, sheetName = "Data2")
yourSheet <- createSheet(wb, sheetName="Data2")
addDataFrame(EURGBP, yourSheet, startRow = 6)
saveWorkbook(wb, xlsFXexpname)
#saving backup
file.copy(xlsFXexpname,backuppath, copy.date = TRUE)
library(quantmod)
library(xlsx)
library(ggplot2)
rm(list = ls())
# ------------------------------- INPUTS -----------------------------------------------
# General & Market Data
today <- "2017-02-25"
dayslag <- 360*5
main_loc <- "D:/GithubLocal/mainworking/"
filenm <- "pos_data.csv"
mkt_sym = c("EUR/GBP","EUR/USD","USD/JPY","XAU/USD","USD/CHF")
source(paste(main_loc,"Functions.R",sep = ""))
# Storing all market data in a list as data frames
mkt_list <- list()
for (ii in 1:length(mkt_sym)){
mkt_list[[ii]] <- get(gsub("/","",mkt_sym[ii]))
mkt_list[[ii]] <- data.frame(dates = index(mkt_list[[ii]]),mkt_list[[ii]])
}
# Creating a data frame with synchronous data
mkt_data <- data.frame(mkt_list[[1]])
row.names(mkt_data) <- NULL
for (ii in 3:(length(mkt_sym)+1)){
mkt_data[,ii] <- mkt_list[[ii-1]][match(mkt_data$dates,mkt_list[[ii-1]]$dates),2]
}
colnames(mkt_data) <-c("dates",gsub("/","",mkt_sym))
# Cleaning workspace
for (ii in 1:length(instr)){
rm(list = instr[[ii]])
}
rm(mkt_list)
fx_rate = fx_rate("EUR","GBP",today,mkt_data)
fx_rate = fx_rate("EUR","GBP",today,mkt_data=mkt_data)
library(quantmod)
library(xlsx)
library(ggplot2)
rm(list = ls())
# ------------------------------- INPUTS -----------------------------------------------
# General & Market Data
today <- "2017-02-25"
dayslag <- 360*5
main_loc <- "D:/GithubLocal/mainworking/"
filenm <- "pos_data.csv"
mkt_sym = c("EUR/GBP","EUR/USD","USD/JPY","XAU/USD","USD/CHF")
source(paste(main_loc,"Functions.R",sep = ""))
# Simulation
rep_ccy <- "GBP"
sim_st <- as.character(as.Date(today)-dayslag)
sim_e <- today
value <- today
# ------------------------------- DATA LOADING -----------------------------------------------
prvdate <- as.character(as.Date(today)-dayslag)
pos_loc <- paste(main_loc,filenm, sep="")
pos_data <- data.frame(read.table(pos_loc, header = TRUE, sep = ","))
instr <- getFX(mkt_sym,from=prvdate)
# ------------------------------- DATA HANDLING AND MANIPULATION -----------------------------------------------
# Storing all market data in a list as data frames
mkt_list <- list()
for (ii in 1:length(mkt_sym)){
mkt_list[[ii]] <- get(gsub("/","",mkt_sym[ii]))
mkt_list[[ii]] <- data.frame(dates = index(mkt_list[[ii]]),mkt_list[[ii]])
}
# Creating a data frame with synchronous data
mkt_data <- data.frame(mkt_list[[1]])
row.names(mkt_data) <- NULL
for (ii in 3:(length(mkt_sym)+1)){
mkt_data[,ii] <- mkt_list[[ii-1]][match(mkt_data$dates,mkt_list[[ii-1]]$dates),2]
}
colnames(mkt_data) <-c("dates",gsub("/","",mkt_sym))
# Cleaning workspace
for (ii in 1:length(instr)){
rm(list = instr[[ii]])
}
rm(mkt_list)
fx_rate = fx_rate("EUR","GBP",today,mkt_data=mkt_data)
View(fx_rate)
fx_rate = fx_rate("EUR","GBP",today,mkt_data=mkt_data)
fx_rate = fx_rate("EUR","GBP",today,mkt_data=mkt_data)
fx_rate = fx_rate("EUR","GBP",today,mkt_data=mkt_data)
library(quantmod)
library(xlsx)
library(ggplot2)
rm(list = ls())
# ------------------------------- INPUTS -----------------------------------------------
# General & Market Data
today <- "2017-02-25"
dayslag <- 360*5
main_loc <- "D:/GithubLocal/mainworking/"
filenm <- "pos_data.csv"
mkt_sym = c("EUR/GBP","EUR/USD","USD/JPY","XAU/USD","USD/CHF")
source(paste(main_loc,"Functions.R",sep = ""))
# Simulation
rep_ccy <- "GBP"
sim_st <- as.character(as.Date(today)-dayslag)
sim_e <- today
value <- today
# ------------------------------- DATA LOADING -----------------------------------------------
prvdate <- as.character(as.Date(today)-dayslag)
pos_loc <- paste(main_loc,filenm, sep="")
pos_data <- data.frame(read.table(pos_loc, header = TRUE, sep = ","))
instr <- getFX(mkt_sym,from=prvdate)
# ------------------------------- DATA HANDLING AND MANIPULATION -----------------------------------------------
# Storing all market data in a list as data frames
mkt_list <- list()
for (ii in 1:length(mkt_sym)){
mkt_list[[ii]] <- get(gsub("/","",mkt_sym[ii]))
mkt_list[[ii]] <- data.frame(dates = index(mkt_list[[ii]]),mkt_list[[ii]])
}
# Creating a data frame with synchronous data
mkt_data <- data.frame(mkt_list[[1]])
row.names(mkt_data) <- NULL
for (ii in 3:(length(mkt_sym)+1)){
mkt_data[,ii] <- mkt_list[[ii-1]][match(mkt_data$dates,mkt_list[[ii-1]]$dates),2]
}
colnames(mkt_data) <-c("dates",gsub("/","",mkt_sym))
# Cleaning workspace
for (ii in 1:length(instr)){
rm(list = instr[[ii]])
}
rm(mkt_list)
# ------------------------------- SIMULATION -----------------------------------------------
fx_crate = fx_rate("EUR","GBP",today,mkt_data=mkt_data)
avlbl_rates = colnames(mkt_data)
date = today
mkt_data[match(date,mkt_data[,1]),]
View(mkt_data)
library(quantmod)
library(xlsx)
library(ggplot2)
rm(list = ls())
# ------------------------------- INPUTS -----------------------------------------------
# General & Market Data
today <- "2017-02-23"
dayslag <- 360*5
main_loc <- "D:/GithubLocal/mainworking/"
filenm <- "pos_data.csv"
mkt_sym = c("EUR/GBP","EUR/USD","USD/JPY","XAU/USD","USD/CHF")
source(paste(main_loc,"Functions.R",sep = ""))
# Simulation
rep_ccy <- "GBP"
sim_st <- as.character(as.Date(today)-dayslag)
sim_e <- today
value <- today
# ------------------------------- DATA LOADING -----------------------------------------------
prvdate <- as.character(as.Date(today)-dayslag)
pos_loc <- paste(main_loc,filenm, sep="")
pos_data <- data.frame(read.table(pos_loc, header = TRUE, sep = ","))
instr <- getFX(mkt_sym,from=prvdate)
# ------------------------------- DATA HANDLING AND MANIPULATION -----------------------------------------------
# Storing all market data in a list as data frames
mkt_list <- list()
for (ii in 1:length(mkt_sym)){
mkt_list[[ii]] <- get(gsub("/","",mkt_sym[ii]))
mkt_list[[ii]] <- data.frame(dates = index(mkt_list[[ii]]),mkt_list[[ii]])
}
# Creating a data frame with synchronous data
mkt_data <- data.frame(mkt_list[[1]])
row.names(mkt_data) <- NULL
for (ii in 3:(length(mkt_sym)+1)){
mkt_data[,ii] <- mkt_list[[ii-1]][match(mkt_data$dates,mkt_list[[ii-1]]$dates),2]
}
colnames(mkt_data) <-c("dates",gsub("/","",mkt_sym))
# Cleaning workspace
for (ii in 1:length(instr)){
rm(list = instr[[ii]])
}
rm(mkt_list)
# ------------------------------- SIMULATION -----------------------------------------------
fx_crate = fx_rate("EUR","GBP",today,mkt_data=mkt_data)
View(mkt_data)
View(fx_crate)
date = today
mkt_data[match(date,mkt_data[,1]),]
match(date,mkt_data[,1])
date
mkt_data[,1]
mkt_data[match(as.Date(date),as.Date(mkt_data[,1])),]
fx_rate <- function(ccy1,ccy2,date,mkt_data){
date = today
avlbl_rates = colnames(mkt_data)
current_rates = mkt_data[match(as.Date(date),as.Date(mkt_data[,1])),]
}
library(quantmod)
library(xlsx)
library(ggplot2)
xlspath <- "D:\\Dropbox\\FX Exposure\\"
xlsversion <-"FXExposure_v6"
xlsFXexpname <- paste(xlspath,xlsversion,".xlsm", sep="")
backupname <- paste(xlsversion," ",format(Sys.Date()),".xlsm", sep="")
backuppath <- paste(xlspath,"Backup + Old\\",backupname,sep="")
getFX(c("EUR/GBP","EUR/USD"),from="2015-07-01")
wb <- loadWorkbook(xlsFXexpname)
sheets <- getSheets(wb)
removeSheet(wb, sheetName = "Data2")
yourSheet <- createSheet(wb, sheetName="Data2")
addDataFrame(EURGBP, yourSheet, startRow = 6)
saveWorkbook(wb, xlsFXexpname)
#saving backup
file.copy(xlsFXexpname,backuppath, copy.date = TRUE)
#plotting EURGBP
chart_Series(EURGBP)
library(quantmod)
library(xlsx)
library(ggplot2)
xlspath <- "D:\\Dropbox\\FX Exposure\\"
xlsversion <-"FXExposure_v6"
xlsFXexpname <- paste(xlspath,xlsversion,".xlsm", sep="")
backupname <- paste(xlsversion," ",format(Sys.Date()),".xlsm", sep="")
backuppath <- paste(xlspath,"Backup + Old\\",backupname,sep="")
getFX(c("EUR/GBP","EUR/USD"),from="2015-07-01")
wb <- loadWorkbook(xlsFXexpname)
sheets <- getSheets(wb)
removeSheet(wb, sheetName = "Data2")
yourSheet <- createSheet(wb, sheetName="Data2")
addDataFrame(EURGBP, yourSheet, startRow = 6)
saveWorkbook(wb, xlsFXexpname)
#saving backup
file.copy(xlsFXexpname,backuppath, copy.date = TRUE)
#plotting EURGBP
chart_Series(EURGBP)
?unclass()
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
x <- 1
if(x > 5) {
x <- 0
}
x <- 1:2
if(x > c(5,3) {
x <- 0
}
x <- 1:2
if(x > c(5,3)) {
x <- 0
}
x <- 1:2
if(x > 5 {
x <- 0
}
x <- 1:2
if(x > 5) {
x <- 0
}
rm(x)
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
rm(x,y)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
library(quantmod)
library(xlsx)
library(ggplot2)
rm(list = ls())
today <- "2017-02-25"
prvdate <- as.character(as.Date(today)-30)
getFX(c("EUR/GBP","EUR/USD","USD/JPY"),from=prvdate)
getFX("XAU/USD",from=prvdate)
#plotting EURGBP with ggplot2
tmpData = data.frame(dates = index(EURGBP),EURGBP,EURUSD)
ggplot(tmpData, aes(x = dates, y= EUR.GBP))+
geom_line(aes(y=EUR.GBP))
#plotting EURGBP with quantmod
bx <- layout(matrix(c(1,2,3,4),2,2, byrow = TRUE))
chart_Series(EURGBP)
chart_Series(EURUSD)
chart_Series(XAUUSD)
chart_Series(USDJPY)
library(quantmod)
library(xlsx)
library(ggplot2)
rm(list = ls())
# ------------------------------- INPUTS -----------------------------------------------
# General & Market Data
today <- "2017-02-23"
dayslag <- 360*5
main_loc <- "D:/GithubLocal/mainworking/"
filenm <- "pos_data.csv"
mkt_sym = c("EUR/GBP","EUR/USD","USD/JPY","XAU/USD","USD/CHF","USD/GBP")
source(paste(main_loc,"Functions.R",sep = ""))
# Simulation
rep_ccy <- "GBP"
sim_st <- as.character(as.Date(today)-dayslag)
sim_e <- today
value <- today
# ------------------------------- DATA LOADING -----------------------------------------------
prvdate <- as.character(as.Date(today)-dayslag)
pos_loc <- paste(main_loc,filenm, sep="")
pos_data <- data.frame(read.table(pos_loc, header = TRUE, sep = ","))
instr <- getFX(mkt_sym,from=prvdate)
# ------------------------------- DATA HANDLING AND MANIPULATION -----------------------------------------------
# Storing all market data in a list as data frames
mkt_list <- list()
for (ii in 1:length(mkt_sym)){
mkt_list[[ii]] <- get(gsub("/","",mkt_sym[ii]))
mkt_list[[ii]] <- data.frame(dates = index(mkt_list[[ii]]),mkt_list[[ii]])
}
# Creating a data frame with synchronous data
mkt_data <- data.frame(mkt_list[[1]])
row.names(mkt_data) <- NULL
for (ii in 3:(length(mkt_sym)+1)){
mkt_data[,ii] <- mkt_list[[ii-1]][match(mkt_data$dates,mkt_list[[ii-1]]$dates),2]
}
colnames(mkt_data) <-c("dates",gsub("/","",mkt_sym))
# Cleaning workspace
for (ii in 1:length(instr)){
rm(list = instr[[ii]])
}
rm(mkt_list)
# ------------------------------- SIMULATION -----------------------------------------------
fx_crate = fx_rate("EUR","GBP",today,mkt_data=mkt_data)
pos_data[,4] <- fx_rate(pos_data[,3],rep_ccy,today,mkt_data=mkt_data)
View(pos_data)
View(pos_data)
colnames(pos_data[,4]) <- paste("CCY",rep_ccy, sep="")
colnames(pos_data)[4] <- paste("CCY",rep_ccy,sep="")
View(pos_data)
colnames(pos_data)[1] <- "Instrument"
View(pos_data)
# PART 3
source("corr.R")
cr <- corr("specdata", 150)
setwd("D:/GithubLocal/datasciencecoursera/")
# PART 3
source("corr.R")
cr <- corr("specdata", 150)
head(cr)
warnings()
data.frame(c(1,2,3,4,5))
x <- data.frame(c(1,2,3,4,5))
x[,2] <- 10*x[,1]
View(x)
cor(x)
cr <- cor(X)
cr <- cor(x)
View(cr)
id = 1:332
lnid <- length(id)
data <- list()
for(ii in 1:lnid){
if(id[ii] < 10){
strid <- paste("00",as.character(id[ii]), sep="")
}else if (id[ii]<100){
strid <- paste("0",as.character(id[ii]), sep="")
}else{
strid <- as.character(id[ii])
}
data[[ii]] <-  read.csv(paste(directory,"/",strid,".csv",sep=""))
}
directory <- "specdata"
id = 1:332
lnid <- length(id)
data <- list()
for(ii in 1:lnid){
if(id[ii] < 10){
strid <- paste("00",as.character(id[ii]), sep="")
}else if (id[ii]<100){
strid <- paste("0",as.character(id[ii]), sep="")
}else{
strid <- as.character(id[ii])
}
data[[ii]] <-  read.csv(paste(directory,"/",strid,".csv",sep=""))
}
res_data <- data.frame()
head(data[[ii]])
head(data[[ii]])
tmp <- data[[1]]
View(tmp)
cor[tmp[,2:3]]
cor(tmp[,2:3])
source("corr.R")
cr <- corr("specdata", 150)
head(cr)
summary(cr)
rm(list = ls())
cr <- corr("specdata", 400)
head(cr)
cr <- corr("specdata", 400)
head(cr)
source("corr.R")
cr <- corr("specdata", 400)
head(cr)
summary(cr)
cr <- corr("specdata", 5000)
summary(cr)
length(cr)
cr <- corr("specdata")
summary(cr)
length(cr)
pollutantmean("specdata", "sulfate", 1:10)
rm(list = ls())
setwd("D:/GithubLocal/datasciencecoursera/")
source("pollutantmean.R")
source("corr.R")
source("complete.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 34)
pollutantmean("specdata", "nitrate")
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
cc <- complete("specdata", 54)
print(cc$nobs)
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
?set.seed()
?sample()
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
print(out)
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
rm(list = ls())
library(quantmod)
library(xlsx)
library(ggplot2)
xlspath <- "D:\\Dropbox\\FX Exposure\\"
xlsversion <-"FXExposure_v6"
xlsFXexpname <- paste(xlspath,xlsversion,".xlsm", sep="")
backupname <- paste(xlsversion," ",format(Sys.Date()),".xlsm", sep="")
backuppath <- paste(xlspath,"Backup + Old\\",backupname,sep="")
getFX(c("EUR/GBP","EUR/USD"),from="2015-07-01")
wb <- loadWorkbook(xlsFXexpname)
sheets <- getSheets(wb)
removeSheet(wb, sheetName = "Data2")
yourSheet <- createSheet(wb, sheetName="Data2")
addDataFrame(EURGBP, yourSheet, startRow = 6)
saveWorkbook(wb, xlsFXexpname)
#saving backup
file.copy(xlsFXexpname,backuppath, copy.date = TRUE)
#plotting EURGBP
chart_Series(EURGBP)
